@import "./variables";

// ---------------------------------------------------------
// @Functions
// ---------------------------------------------------------
@function colors($color-key) {
  @return map-get($default-colors, #{$color-key});

}

// ---------------------------------------------------------
// @Mixins
// ---------------------------------------------------------

@mixin transition($time) {
  -moz-transition:all #{$time} ease-in-out;
  -o-transition:all #{$time} ease-in-out;
  -webkit-transition:all #{$time} ease-in-out;
  transition:all #{$time} ease-in-out;

}

@mixin center {
  align-items:center;
  display:flex;
  justify-content:center;

}

@mixin shadow {
  box-shadow: 0 0.125rem 0.5rem rgba(colors('black-color'), 0.15);
}

// ---------------------------------------------------------
// @General Media Query Mixin
// ---------------------------------------------------------

// Mixin used for custom rules that don't follow
// any of the following pre-made media queries.

@mixin mediaQuery($condition) {
  @media #{$condition}
{
  @content;

}
}

// ---------------------------------------------------------
// @All Above Media Query Mixin
// ---------------------------------------------------------

// Mixin used to match certain breakpoint
// and all devices above it.

@mixin from($breakpoint) {
  @media screen and (min-width: $breakpoint)
{
  @content;

}
}

// ---------------------------------------------------------
// @All Under Media Query Mixin
//
// Mixin used to match all devices under certain breakpoint.
// ---------------------------------------------------------

@mixin to($breakpoint) {
  @media screen and (max-width: $breakpoint - 1px)
{
  @content;

}
}

// ---------------------------------------------------------
// @Between Two Devices Media Query Mixin
//
// Mixin used to match the devices between 2 breakpoints.
// ---------------------------------------------------------
@mixin between($start, $end) {
  @media screen and (min-width: $start) and (max-width: $end - 1px)
{
  @content;

}
}
